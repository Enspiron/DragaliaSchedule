{"version":3,"sources":["Schedule.js","App.js","serviceWorker.js","index.js"],"names":["Schedule","Void","Monday","Element","Name","Banner","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","HDT","weekday","date","timezone","isBehindGTM","startsWith","substr","split","map","t","parseInt","diff","currentDiff","Date","getTimezoneOffset","valueOf","timezoneShifter","toLocaleString","console","log","App","className","data","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iPAmEeA,G,MAlEE,CACbC,KAAO,CACHC,OAAQ,CACJ,CAACC,QAAS,QAASC,KAAM,UAAWC,OAAQ,kGAEhDC,QAAS,CACL,CAACH,QAAS,QAASC,KAAM,OAAQC,OAAQ,8FAG7CE,UAAW,CACP,CAACJ,QAAS,QAASC,KAAM,WAAYC,OAAQ,iGAC7C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,iGAEjDG,SAAU,CACN,CAACL,QAAS,OAAQC,KAAM,SAAUC,OAAQ,gGAE9CI,OAAQ,CACJ,CAACN,QAAS,QAASC,KAAM,SAAUC,OAAQ,uGAC3C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,iGAEjDK,SAAU,CACN,CAACP,QAAS,SAAUC,KAAM,UAAWC,OAAQ,iGAEjDM,OAAQ,CACJ,CAACR,QAAS,OAAQC,KAAM,UAAWC,OAAQ,qGAGnDO,IAAM,CACFV,OAAQ,CACJ,CAACC,QAAS,OAAQC,KAAM,cAAeC,OAAQ,wGAC/C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,oGAEhDC,QAAS,CACL,CAACH,QAAS,QAASC,KAAM,YAAaC,OAAQ,qGAC9C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,oGAEjDE,UAAW,CACP,CAACJ,QAAS,QAASC,KAAM,UAAWC,OAAQ,mGAC5C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,oGAEhDG,SAAU,CACN,CAACL,QAAS,OAAQC,KAAM,cAAeC,OAAQ,wGAC/C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,oGAEjDI,OAAQ,CACJ,CAACN,QAAS,QAASC,KAAM,YAAaC,OAAQ,qGAC9C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,oGAEhDK,SAAU,CACN,CAACP,QAAS,OAAQC,KAAM,cAAeC,OAAQ,wGAC/C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,mGAC5C,CAACF,QAAS,QAASC,KAAM,YAAaC,OAAQ,qGAC9C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,mGAC5C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,oGAGjDM,OAAQ,CACJ,CAACR,QAAS,OAAQC,KAAM,cAAeC,OAAQ,wGAC/C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,mGAC5C,CAACF,QAAS,QAASC,KAAM,YAAaC,OAAQ,qGAC9C,CAACF,QAAS,QAASC,KAAM,UAAWC,OAAQ,mGAC5C,CAACF,QAAS,SAAUC,KAAM,UAAWC,OAAQ,uGC3CzD,IAEIQ,EAhBJ,SAAyBC,EAAMC,GAC7B,IAAIC,GAAc,EACdD,EAASE,WAAW,OACtBF,EAAWA,EAASG,OAAO,GAC3BF,GAAc,GAJuB,MAOhBD,EAASI,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAOC,SAASD,MAPxB,mBAQjCE,EAAe,GARkB,WAQJP,EAAc,GAAK,GAChDQ,GAAc,IAAIC,MAAOC,oBAE/B,OAAO,IAAID,KAAKX,EAAKa,UAAmC,IAAtBH,EAAcD,GAAa,KAIjDK,CADD,IAAIH,KACmB,SACdI,eAAe,UAAW,CAAEhB,QAAS,SAE3DiB,QAAQC,IAAIlB,G,IACSmB,E,uKAEjB,OACE,6BACA,yBAAKC,UAAU,UAAf,6BAGGjC,EAASY,IAAIC,GAASO,KAAI,SAAAc,GACzB,OACE,yBAAKD,UAAU,QACf,yBAAKA,UAAWC,EAAK/B,SAAU+B,EAAK/B,QAApC,MAAgD+B,EAAK9B,MACrD,yBAAK6B,UAAU,SAASE,IAAKD,EAAK7B,OAAQ+B,IAAKF,EAAK9B,WAIxD,yBAAK6B,UAAU,UAAf,oBAGCjC,EAASC,KAAKY,GAASO,KAAI,SAAAc,GAC1B,OACE,yBAAKD,UAAU,QACf,yBAAKA,UAAWC,EAAK/B,SAAU+B,EAAK/B,QAApC,MAAgD+B,EAAK9B,MACrD,yBAAK6B,UAAU,SAASE,IAAKD,EAAK7B,OAAQ+B,IAAKF,EAAK9B,gB,GAtB/BiC,aCZbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,a","file":"static/js/main.44fdeab3.chunk.js","sourcesContent":["\r\nconst Schedule = {\r\n    Void : {\r\n        Monday: [\r\n            {Element: 'Water', Name: 'Chimera', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/d/d7/Banner_Tidal_Chimera_Strike.png'}\r\n        ],\r\n        Tuesday: [\r\n            {Element: 'Flame', Name: 'Agni', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/5/55/Banner_Void_Agni_Strike.png'}\r\n\r\n        ],\r\n        Wednesday: [\r\n            {Element: 'Water', Name: 'Poseidon', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/0/06/Banner_Void_Poseidon_Strike.png'},\r\n            {Element: 'Shadow', Name: 'Chimera', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/4/46/Banner_Ebon_Chimera_Strike.png'}\r\n        ],\r\n        Thursday: [\r\n            {Element: 'Wind', Name: 'Zephyr', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/e/e3/Banner_Void_Zephyr_Strike.png'}\r\n        ],\r\n        Friday: [\r\n            {Element: 'Light', Name: 'Jeanne', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/8/8e/Banner_Void_Jeanne_d%27Arc_Strike.png'},\r\n            {Element: 'Shadow', Name: 'Nidhogg', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/d/d6/Banner_Void_Nidhogg_Strike.png'}\r\n        ],\r\n        Saturday: [\r\n            {Element: 'Shadow', Name: 'Nidhogg', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/d/d6/Banner_Void_Nidhogg_Strike.png'}\r\n        ],\r\n        Sunday: [\r\n            {Element: 'Wind', Name: 'Chimera', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/5/51/Banner_Tempest_Chimera_Strike.png'}\r\n        ]\r\n    },\r\n    HDT : {\r\n        Monday: [\r\n            {Element: 'Wind', Name: 'Midgardsomr', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/3/37/Banner_High_Midgardsormr%27s_Trial.png'},\r\n            {Element: 'Water', Name: 'Mercury', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/f/ff/Banner_High_Mercury%27s_Trial.png'},\r\n        ],\r\n        Tuesday: [\r\n            {Element: 'Flame', Name: 'Brunhilda', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/b/b3/Banner_High_Brunhilda%27s_Trial.png'},\r\n            {Element: 'Shadow', Name: 'Zodiark', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/6/6c/Banner_High_Zodiark%27s_Trial.png'}\r\n        ],\r\n        Wednesday: [\r\n            {Element: 'Water', Name: 'Mercury', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/f/ff/Banner_High_Mercury%27s_Trial.png'},\r\n            {Element: 'Light', Name: 'Jupiter', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/0/0b/Banner_High_Jupiter%27s_Trial.png'},\r\n        ],\r\n        Thursday: [\r\n            {Element: 'Wind', Name: 'Midgardsomr', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/3/37/Banner_High_Midgardsormr%27s_Trial.png'},\r\n            {Element: 'Shadow', Name: 'Zodiark', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/6/6c/Banner_High_Zodiark%27s_Trial.png'}\r\n        ],\r\n        Friday: [\r\n            {Element: 'Flame', Name: 'Brunhilda', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/b/b3/Banner_High_Brunhilda%27s_Trial.png'},\r\n            {Element: 'Light', Name: 'Jupiter', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/0/0b/Banner_High_Jupiter%27s_Trial.png'},\r\n        ],\r\n        Saturday: [\r\n            {Element: 'Wind', Name: 'Midgardsomr', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/3/37/Banner_High_Midgardsormr%27s_Trial.png'},\r\n            {Element: 'Water', Name: 'Mercury', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/f/ff/Banner_High_Mercury%27s_Trial.png'},\r\n            {Element: 'Flame', Name: 'Brunhilda', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/b/b3/Banner_High_Brunhilda%27s_Trial.png'},\r\n            {Element: 'Light', Name: 'Jupiter', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/0/0b/Banner_High_Jupiter%27s_Trial.png'},\r\n            {Element: 'Shadow', Name: 'Zodiark', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/6/6c/Banner_High_Zodiark%27s_Trial.png'}\r\n\r\n        ],\r\n        Sunday: [\r\n            {Element: 'Wind', Name: 'Midgardsomr', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/3/37/Banner_High_Midgardsormr%27s_Trial.png'},\r\n            {Element: 'Water', Name: 'Mercury', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/f/ff/Banner_High_Mercury%27s_Trial.png'},\r\n            {Element: 'Flame', Name: 'Brunhilda', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/b/b3/Banner_High_Brunhilda%27s_Trial.png'},\r\n            {Element: 'Light', Name: 'Jupiter', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/0/0b/Banner_High_Jupiter%27s_Trial.png'},\r\n            {Element: 'Shadow', Name: 'Zodiark', Banner: 'https://gamepedia.cursecdn.com/dragalialost_gamepedia_en/6/6c/Banner_High_Zodiark%27s_Trial.png'}\r\n        ]\r\n    }\r\n}\r\n\r\nexport default Schedule;\r\n","import './App.css';\nimport React, { Component } from 'react'\n\nimport Schedule from './Schedule.js'\n\nfunction timezoneShifter(date, timezone) {\n  let isBehindGTM = false;\n  if (timezone.startsWith(\"-\")) {\n    timezone = timezone.substr(1);\n    isBehindGTM = true;\n  }\n\n  const [hDiff, mDiff] = timezone.split(\":\").map((t) => parseInt(t));\n  const diff = hDiff * 60 + mDiff * (isBehindGTM ? 1 : -1);\n  const currentDiff = new Date().getTimezoneOffset();\n\n  return new Date(date.valueOf() + (currentDiff - diff) * 60 * 1000);\n}\n\nconst _now = new Date()\nvar dateObj = timezoneShifter(_now, \"06:00\")\nvar weekday = dateObj.toLocaleString(\"default\", { weekday: \"long\" })\n\nconsole.log(weekday)\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n      <div className='Header'>\n      Current available Master: \n      </div>\n        {Schedule.HDT[weekday].map(data=>{\n          return(\n            <div className='Type'>\n            <div className={data.Element}>{data.Element} : {data.Name}</div>\n            <img className='Banner' src={data.Banner} alt={data.Name}/>\n            </div>\n          )\n        })}\n        <div className='Header'>\n        Current Void x2: \n        </div>\n        {Schedule.Void[weekday].map(data=>{\n          return(\n            <div className='Type'>\n            <div className={data.Element}>{data.Element} : {data.Name}</div>\n            <img className='Banner' src={data.Banner} alt={data.Name}/>\n            </div>\n          )})}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}